name: Build & Push
on:
  push:
    branches:
      - main

# Global variables
env:
  GITHUB_ACTOR: ${{ github.actor }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Jobs
jobs:
  # Continuous integration
  Build_Scraper:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      # Clone the repo
      - name: Check Out Repo
        uses: actions/checkout@v3

      # Build the image
      - name: Build Image
        run: |
          docker compose -f docker-compose-ci.yml build
      # Login to GitHub Container Registry
      - name: Registry Login
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      # Push the image to the registry
      - name: Push Image
        run: docker compose -f docker-compose-ci.yml push

  # Continuous integration
  Build_Provisioner:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      # Clone the repo
      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to GitHub Container Registry
      - name: Registry Login
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./container_provisioner
          platforms: linux/amd64
          tags: ghcr.io/${{ github.actor }}/tripadvisor-review-scraper/container_provisioner:latest
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
