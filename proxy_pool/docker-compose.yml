version: '3.9'
services:
  vpnch:
    image: ghcr.io/algo7/tripadvisor-review-scraper/vpn_worker:latest
    labels:
      # This label is used by the container_provisioner to identify the containers that are part of the proxy pool.
      - 'TaskOwner=PROXY'
      # This label is used by the container_provisioner to show the region of the proxy on the UI.
      - 'vpn.region=CH'
      # This label is used by the container_provisioner to get the socks port of the proxy.
      - 'proxy.socks.port=8881'
      # This label is used by the container_provisioner to get the http port of the proxy.
      # Currently, the container_provisioner only supports socks5 proxies.
      - 'proxy.http.port=8888'
    # Capabilities required to run OpenVPN
    cap_add:
      - NET_ADMIN
    # Devices required to run OpenVPN
    devices:
      - '/dev/net/tun:/dev/net/tun'
    # NOTE: These port mappings are only used when you are connecting to the proxy pool from outside of docker network without the container_provisioner (e.g. from your host machine).
    ports:
      # Squid proxy port
      - target: 8888
        published: 8888
        protocol: tcp
      # Dante proxy port
      - target: 8881
        published: 8881
        protocol: tcp
      - target: 8881
        published: 8881
        protocol: udp
    # WARNING: Do not Change the name of this network. It is used by the scraper to connect to the proxies.
    # At this moment, it is hardcoded in the container_provisioner when creating the containers.
    networks:
      - scraper_vpn
    volumes:
      # OpenVPN credentials and config (config.vpn and pass.txt)
      - type: bind
        source: ./VPN/CH
        target: /VPN
        bind:
          create_host_path: true

  vpnse:
    image: ghcr.io/algo7/tripadvisor-review-scraper/vpn_worker:latest
    labels:
      - 'TaskOwner=PROXY'
      - 'vpn.region=SE'
      - 'proxy.socks.port=8881'
      - 'proxy.http.port=8888'
    # Capabilities required to run OpenVPN
    cap_add:
      - NET_ADMIN
    # Devices required to run OpenVPN
    devices:
      - '/dev/net/tun:/dev/net/tun'
    ports:
      # Squid proxy port
      - target: 8888
        published: 8889
        protocol: tcp
      # Dante proxy port
      - target: 8881
        published: 8882
        protocol: tcp
      - target: 8881
        published: 8882
        protocol: udp
    networks:
      - scraper_vpn
    volumes:
      # OpenVPN credentials
      - type: bind
        source: ./VPN/SE
        target: /VPN
        bind:
          create_host_path: true

  vpnuk:
    image: ghcr.io/algo7/tripadvisor-review-scraper/vpn_worker:latest
    labels:
      - 'TaskOwner=PROXY'
      - 'vpn.region=UK'
      - 'proxy.socks.port=8881'
      - 'proxy.http.port=8888'
    # Capabilities required to run OpenVPN
    cap_add:
      - NET_ADMIN
    # Devices required to run OpenVPN
    devices:
      - '/dev/net/tun:/dev/net/tun'
    ports:
      # Squid proxy port
      - target: 8888
        published: 8890
        protocol: tcp
      # Dante proxy port
      - target: 8881
        published: 8883
        protocol: tcp
      - target: 8881
        published: 8883
        protocol: udp
    networks:
      - scraper_vpn
    volumes:
      # OpenVPN credentials
      - type: bind
        source: ./VPN/UK
        target: /VPN
        bind:
          create_host_path: true

  vpnbe:
    image: ghcr.io/algo7/tripadvisor-review-scraper/vpn_worker:latest
    labels:
      - 'TaskOwner=PROXY'
      - 'vpn.region=BE'
      - 'proxy.socks.port=8881'
      - 'proxy.http.port=8888'
    # Capabilities required to run OpenVPN
    cap_add:
      - NET_ADMIN
    # Devices required to run OpenVPN
    devices:
      - '/dev/net/tun:/dev/net/tun'
    ports:
      # Squid proxy port
      - target: 8888
        published: 8891
        protocol: tcp
      # Dante proxy port
      - target: 8881
        published: 8884
        protocol: tcp
      - target: 8881
        published: 8884
        protocol: udp
    networks:
      - scraper_vpn
    volumes:
      # OpenVPN credentials
      - type: bind
        source: ./VPN/BE
        target: /VPN
        bind:
          create_host_path: true

networks:
  scraper_vpn:
    # WARNING: Do not Change the name of this network. It is used by the scraper to connect to the proxies.
    # At this moment, it is hardcoded in the container_provisioner when creating the containers.
    name: scraper_vpn
    driver: bridge
    attachable: true
